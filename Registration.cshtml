@model Bank_Management.Models.registeruser

@{
    ViewBag.Title = "Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CSS/Registration.css" rel="stylesheet" />
<div id="main-content">



    @using (Html.BeginForm("Registration", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()


        <div class="form-horizontal">
            <h4>Register </h4>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <strong>Success:</strong>  @TempData["SuccessMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span>&times;</span>
                    </button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <strong>Error</strong> @TempData["ErrorMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span>&times;</span>
                    </button>
                </div>
            }
            <hr />
            @*@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.BankId, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.BankId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.BankId, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control", @id = "inputfName", @onfocusout = "validateFirstName(this)", placeholder = "Enter your first name" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                    <span id="errorFirstName" class="text-danger"></span>
                </div>
            </div>





            <div class="form-group">
                @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control", @id = "lastName", @onfocusout = "validateLastName(this)", placeholder = "Last your first name" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    <span id="errorLastName" class="text-danger"></span>
                </div>
            </div>


            <div class="form-group">
                <label for="inputDateOfBirth" class="control-label col-md-2">Date of birth</label>
                <div class="col-md-10">
                    <input type="date" class="form-control" id="inputDateOfBirth" name="DOB"
                           onfocus="handleFocusAge(this)" onblur="handleFocusOutAge(this)" />
                    <span id="errorDateOfBirth" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Gender, "Gender", htmlAttributes: new { @class = "control-label col-md-3" })
                <div class="col-md-10" id="gender-container">
                    <div class="radio-inline">
                        <label>
                            @Html.RadioButtonFor(model => model.Gender, "Male", new { @required = "required" }) Male
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label>
                            @Html.RadioButtonFor(model => model.Gender, "Female", new { @required = "required" }) Female
                        </label>
                    </div>
                    <div class="radio-inline">
                        <label>
                            @Html.RadioButtonFor(model => model.Gender, "Others", new { @required = "required" }) Others
                        </label>
                    </div>
                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Phone, "Phone number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @id = "inputnumber", @onfocusout = "validateNumber(this)", placeholder = "Enter your phone number" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                    <span id="errorNumber" style="color:red"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, "E-mail", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", @id = "emailInput", onblur = "validateEmail(this)", placeholder = "Enter your email id" } })
                   
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    <div id="errorMail" class="text-danger"></div>
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Address, "Address", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @onfocusout = "validateAddress(this)", placeholder = "Enter your address" } })
                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    <span id="errorAddress" class="text-danger"></span>
                </div>
            </div>








            <div class="form-group">
                @Html.LabelFor(model => model.State, "State", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="inputState" name="State" onfocusout="ValidateState(this)" required="required">
                        <option value="" disabled selected>Select a state</option>
                        <!-- State options will be dynamically populated by JavaScript -->
                    </select>
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                    <span id="errorState" class="text-danger"></span>
                </div>
            </div>




            <div class="form-group">
                @Html.LabelFor(model => model.City, "City", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="inputCity" name="City" onfocusout="ValidateCity(this)" required="required">
                        <option value="" disabled selected>Select a city</option>
                        <!-- City options will be dynamically populated by JavaScript -->
                    </select>
                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    <span id="errorCity" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", placeholder = "Email id will be used as your user name" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*<div class="password-container">*@
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "password", @onfocusout = "validatePassword(this)", placeholder = "Enter your password" })
                    @*<i class="password-toggle fas fa-eye-slash" onclick="togglePasswordVisibility()"></i>*@
                    @*</div>*@
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                    <div id="errorPassword" class="text-danger"></div>

                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password, "Confirm password", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.PasswordFor(model => model.Password, new { @class = "form-control", id = "confirmPassword", @onfocusout = "validateConfirmPassword(this)", placeholder = "Confirm your password" })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    <div id="errorConfirmPassword" class="text-danger"></div>

                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.ImageFile, "Image file", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="ImageFile" />
                </div>
            </div>&nbsp;&nbsp;
            <center>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <!-- Add onclick attribute to the Register button -->
                        <input type="submit" value="Register" class="btn btn-success" onclick="return validateForm()" />
                    </div>
                </div>
            </center>&nbsp;&nbsp;
            <p>
                Already have an account ? @Html.ActionLink("Login here", "Login", "Home")
            </p>
        </div>


    }
</div>

<script src="~/JAVASCRIPT/Registration.js"></script>




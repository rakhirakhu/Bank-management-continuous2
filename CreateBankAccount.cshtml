@model Bank_Management.Models.BankAccount

@{
    ViewBag.Title = "CreateBankAccount";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<link href="~/CSS/Registration.css" rel="stylesheet" />
<script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>


<div id="main-content">

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        <link href="~/CSS/Registration.css" rel="stylesheet" />
        <div class="form-horizontal">
            <h4>Bank account</h4>
            @if (TempData["SuccessMessage"] != null)
            {
                <div class="alert alert-success">
                    <strong>Success:</strong>  @TempData["SuccessMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span>&times;</span>
                    </button>
                </div>
            }
            @if (TempData["ErrorMessage"] != null)
            {
                <div class="alert alert-danger">
                    <strong>Error</strong> @TempData["ErrorMessage"]
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span>&times;</span>
                    </button>
                </div>
            }
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
            @Html.LabelFor(model => model.AccountId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccountId, "", new { @class = "text-danger" })
            </div>
        </div>*@

            @*<div class="form-group">
            @Html.LabelFor(model => model.UserId, "User id", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccountHolderName, "Account holder name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccountHolderName, new { htmlAttributes = new { @class = "form-control", @id = "inputfName" } })
                <span id="errorFirstName" class="text-danger"></span>
            </div>
        </div>*@
            <div class="form-group">
                @Html.LabelFor(model => model.UserId, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.UserId, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AccountHolderName, new { @class = "control-label" })
                @Html.TextBoxFor(model => model.AccountHolderName, new { @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.AccountHolderName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.BranchName, "Branch name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" id="inputState" name="BranchName" onfocusout="validateBranchName(this)" required="required">
                        <option value="" disabled selected>Select a branch</option>
                        <option value="South Branch">South Branch</option>
                        <option value="North Branch">North Branch </option>
                        <option value="West Branch">West Branch </option>
                        <option value="East Branch">East Branch </option>
                        <option value="Vytila Branch">Vytila Branch </option>
                        <option value="Kalamasseri Branch">Kalamasseri Branch </option>
                        <option value="Southern Branc">Southern Branch </option>


                        <!-- Add more branch options as needed -->
                    </select>
                    @Html.ValidationMessageFor(model => model.BranchName, "", new { @class = "text-danger" })
                    <span id="errorBranchName" class="text-danger"></span>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.AccountNumber, "Account number", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", @onblur = "validateAccountNumber(this)" } })
                    @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                    <span id="errorAccountNumber" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IFSCCode, "IFSC code", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IFSCCode, new { htmlAttributes = new { @class = "form-control", @onblur = "validateIFSCCode(this)" } })
                    @Html.ValidationMessageFor(model => model.IFSCCode, "", new { @class = "text-danger" })
                    <span id="errorIFSCCode" class="text-danger"></span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.OpenDate, "Open date", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="date" class="form-control" id="inputOpenDate" name="OpenDate" />
                    @Html.ValidationMessageFor(model => model.OpenDate, "", new { @class = "text-danger" })
                    <span id="errorOpenDate" class="text-danger"></span>
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Balance, "Balance", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @id = "inputBalance" } })
                    <span id="errorBalance" class="text-danger"></span>
                </div>


            </div>&nbsp;&nbsp;&nbsp;
            <center>
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-outline-success" />
                    </div>
                </div>
            </center>
        </div>
    }

</div>
<script src="~/JAVASCRIPT/Bankaccount.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get today's date in the format "YYYY-MM-DD"
        var today = new Date().toISOString().split('T')[0];

        // Set the value of the date input field to today's date
        document.getElementById("inputOpenDate").value = today;
    });
</script>



